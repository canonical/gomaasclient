package entity

import (
	"net"
	"testing"

	"github.com/google/go-cmp/cmp"

	"github.com/maas/gomaasclient/test/helper"
)

var sampleNetworkInterface NetworkInterface = NetworkInterface{
	Name: "eth0",
	Children: []string{
		"newbond",
	},
	MACAddress:      "00:01:02:03:04:55",
	Links:           []NetworkInterfaceLink{},
	Product:         "",
	Parents:         []string{},
	Enabled:         true,
	VLAN:            VLAN{},
	FirmwareVersion: "",
	SystemID:        "thr3am",
	Tags:            []string{},
	Params:          map[string]interface{}{},
	Type:            "physical",
	Discovered:      []NetworkInterfaceDiscoveredIP{},
	EffectiveMTU:    1500,
	Vendor:          "",
	ID:              138,
	ResourceURI:     "/MAAS/api/2.0/nodes/thr3am/interfaces/138/",
}

var sampleNetworkInterfaces []NetworkInterface = []NetworkInterface{
	{
		Name:    "eth-lKRYAa",
		Parents: []string{},
		Product: "",
		VLAN: VLAN{
			VID:           0,
			MTU:           1500,
			DHCPOn:        false,
			ExternalDHCP:  "",
			Name:          "untagged",
			Space:         "management",
			SecondaryRack: "76y7pg",
			PrimaryRack:   "7xtf67",
			Fabric:        "fabric-1",
			FabricID:      1,
			ID:            5003,
			ResourceURI:   "/MAAS/api/2.0/vlans/5003/",
		},
		Type:            "physical",
		Enabled:         true,
		Params:          "",
		MACAddress:      "cb:93:ac:d1:ed:65",
		EffectiveMTU:    1500,
		SystemID:        "thr3am",
		FirmwareVersion: "",
		Tags: []string{
			"tag-oplxjR",
			"tag-QAxfJH",
			"tag-VOqx2b",
		},
		Discovered: []NetworkInterfaceDiscoveredIP{},
		ID:         37,
		Links: []NetworkInterfaceLink{
			{
				ID:   14,
				Mode: "auto",
				Subnet: Subnet{
					Name: "name-v5djzQ",
					VLAN: VLAN{
						VID:           0,
						MTU:           1500,
						DHCPOn:        false,
						ExternalDHCP:  "",
						Name:          "untagged",
						Space:         "management",
						SecondaryRack: "76y7pg",
						PrimaryRack:   "7xtf67",
						Fabric:        "fabric-1",
						FabricID:      1,
						ID:            5003,
						ResourceURI:   "/MAAS/api/2.0/vlans/5003/",
					},
					CIDR:      "172.16.2.0/24",
					RDNSMode:  2,
					GatewayIP: net.ParseIP("172.16.2.1"),
					DNSServers: []net.IP{
						net.ParseIP("fcb0:c682:8c15:817d:7d80:2713:e225:5624"),
						net.ParseIP("fd66:86c9:6a50:27cd:de13:3f1c:40d1:8aac"),
						net.ParseIP("120.129.237.29"),
					},
					AllowDNS:        true,
					AllowProxy:      true,
					ActiveDiscovery: false,
					Managed:         true,
					Space:           "management",
					ID:              2,
					ResourceURI:     "/MAAS/api/2.0/subnets/2/",
				},
			},
		},
		Vendor: "",
		Children: []string{
			"eth-lKRYAa.42",
		},
		ResourceURI: "/MAAS/api/2.0/nodes/thr3am/interfaces/37/",
	},
	{
		Name:    "eth-3ookc5",
		Parents: []string{},
		Product: "",
		VLAN: VLAN{
			VID:           0,
			MTU:           1500,
			DHCPOn:        false,
			ExternalDHCP:  "",
			Name:          "untagged",
			Space:         "management",
			SecondaryRack: "76y7pg",
			PrimaryRack:   "7xtf67",
			Fabric:        "fabric-1",
			FabricID:      1,
			ID:            5003,
			ResourceURI:   "/MAAS/api/2.0/vlans/5003/",
		},
		Type:            "physical",
		Enabled:         true,
		Params:          "",
		MACAddress:      "bc:d3:d5:28:88:dc",
		EffectiveMTU:    1500,
		SystemID:        "thr3am",
		FirmwareVersion: "",
		Tags: []string{
			"tag-LddZkA",
			"tag-EDi2sp",
			"tag-RwynT2",
		},
		Discovered: []NetworkInterfaceDiscoveredIP{},
		ID:         38,
		Links: []NetworkInterfaceLink{
			{
				ID:   15,
				Mode: "auto",
				Subnet: Subnet{
					Name: "name-v5djzQ",
					VLAN: VLAN{
						VID:           0,
						MTU:           1500,
						DHCPOn:        false,
						ExternalDHCP:  "",
						Name:          "untagged",
						Space:         "management",
						SecondaryRack: "76y7pg",
						PrimaryRack:   "7xtf67",
						Fabric:        "fabric-1",
						FabricID:      1,
						ID:            5003,
						ResourceURI:   "/MAAS/api/2.0/vlans/5003/",
					},
					CIDR:      "172.16.2.0/24",
					RDNSMode:  2,
					GatewayIP: net.ParseIP("172.16.2.1"),
					DNSServers: []net.IP{
						net.ParseIP("fcb0:c682:8c15:817d:7d80:2713:e225:5624"),
						net.ParseIP("fd66:86c9:6a50:27cd:de13:3f1c:40d1:8aac"),
						net.ParseIP("120.129.237.29"),
					},
					AllowDNS:        true,
					AllowProxy:      true,
					ActiveDiscovery: false,
					Managed:         true,
					Space:           "management",
					ID:              2,
					ResourceURI:     "/MAAS/api/2.0/subnets/2/",
				},
			},
		},
		Vendor: "",
		Children: []string{
			"eth-3ookc5.42",
		},
		ResourceURI: "/MAAS/api/2.0/nodes/thr3am/interfaces/38/",
	},
	{
		Name:    "eth-W8E8f0",
		Parents: []string{},
		Product: "",
		VLAN: VLAN{
			VID:           0,
			MTU:           1500,
			DHCPOn:        false,
			ExternalDHCP:  "",
			Name:          "untagged",
			Space:         "management",
			SecondaryRack: "76y7pg",
			PrimaryRack:   "7xtf67",
			Fabric:        "fabric-1",
			FabricID:      1,
			ID:            5003,
			ResourceURI:   "/MAAS/api/2.0/vlans/5003/",
		},
		Type:            "physical",
		Enabled:         true,
		Params:          "",
		MACAddress:      "ad:5a:3e:a3:68:13",
		EffectiveMTU:    1500,
		SystemID:        "thr3am",
		FirmwareVersion: "",
		Tags: []string{
			"tag-dc12B9",
			"tag-D71Hh0",
			"tag-PnEfvN",
		},
		Discovered: []NetworkInterfaceDiscoveredIP{},
		ID:         39,
		Links: []NetworkInterfaceLink{
			{
				ID:   16,
				Mode: "auto",
				Subnet: Subnet{
					Name: "name-v5djzQ",
					VLAN: VLAN{
						VID:           0,
						MTU:           1500,
						DHCPOn:        false,
						ExternalDHCP:  "",
						Name:          "untagged",
						Space:         "management",
						SecondaryRack: "76y7pg",
						PrimaryRack:   "7xtf67",
						Fabric:        "fabric-1",
						FabricID:      1,
						ID:            5003,
						ResourceURI:   "/MAAS/api/2.0/vlans/5003/",
					},
					CIDR:      "172.16.2.0/24",
					RDNSMode:  2,
					GatewayIP: net.ParseIP("172.16.2.1"),
					DNSServers: []net.IP{
						net.ParseIP("fcb0:c682:8c15:817d:7d80:2713:e225:5624"),
						net.ParseIP("fd66:86c9:6a50:27cd:de13:3f1c:40d1:8aac"),
						net.ParseIP("120.129.237.29"),
					},
					AllowDNS:        true,
					AllowProxy:      true,
					ActiveDiscovery: false,
					Managed:         true,
					Space:           "management",
					ID:              2,
					ResourceURI:     "/MAAS/api/2.0/subnets/2/",
				},
			},
		},
		Vendor: "",
		Children: []string{
			"eth-W8E8f0.42",
		},
		ResourceURI: "/MAAS/api/2.0/nodes/thr3am/interfaces/39/",
	},
	{
		Name: "eth-lKRYAa.42",
		Parents: []string{
			"eth-lKRYAa",
		},
		Product: "",
		VLAN: VLAN{
			VID:           42,
			MTU:           1500,
			DHCPOn:        false,
			ExternalDHCP:  "",
			Name:          "42",
			Space:         "ipv6-testbed",
			SecondaryRack: "",
			PrimaryRack:   "",
			Fabric:        "fabric-1",
			FabricID:      1,
			ID:            5004,
			ResourceURI:   "/MAAS/api/2.0/vlans/5004/",
		},
		Type:            "vlan",
		Enabled:         true,
		Params:          "",
		MACAddress:      "cb:93:ac:d1:ed:65",
		EffectiveMTU:    1500,
		SystemID:        "thr3am",
		FirmwareVersion: "",
		Tags: []string{
			"tag-u0TLLj",
			"tag-C09Efp",
			"tag-QK7j09",
		},
		Discovered: []NetworkInterfaceDiscoveredIP{},
		ID:         40,
		Links: []NetworkInterfaceLink{
			{
				ID:   17,
				Mode: "auto",
				Subnet: Subnet{
					Name: "name-m3vYqT",
					VLAN: VLAN{
						VID:           42,
						MTU:           1500,
						DHCPOn:        false,
						ExternalDHCP:  "",
						Name:          "42",
						Space:         "ipv6-testbed",
						SecondaryRack: "",
						PrimaryRack:   "",
						Fabric:        "fabric-1",
						FabricID:      1,
						ID:            5004,
						ResourceURI:   "/MAAS/api/2.0/vlans/5004/",
					},
					CIDR:      "2001:db8:42::/64",
					RDNSMode:  2,
					GatewayIP: net.IP{},
					DNSServers: []net.IP{
						net.ParseIP("fd15:6cb0:a55c:235f:e78f:ba4f:2eb4:6b3"),
						net.ParseIP("fcc5:8b5e:c55b:90e0:8be:6b87:eb5:f4c7"),
					},
					AllowDNS:        true,
					AllowProxy:      true,
					ActiveDiscovery: false,
					Managed:         true,
					Space:           "ipv6-testbed",
					ID:              5,
					ResourceURI:     "/MAAS/api/2.0/subnets/5/",
				},
			},
		},
		Vendor:      "",
		Children:    []string{},
		ResourceURI: "/MAAS/api/2.0/nodes/thr3am/interfaces/40/",
	},
	{
		Name: "eth-3ookc5.42",
		Parents: []string{
			"eth-3ookc5",
		},
		Product: "",
		VLAN: VLAN{
			VID:           42,
			MTU:           1500,
			DHCPOn:        false,
			ExternalDHCP:  "",
			Name:          "42",
			Space:         "ipv6-testbed",
			SecondaryRack: "",
			PrimaryRack:   "",
			Fabric:        "fabric-1",
			FabricID:      1,
			ID:            5004,
			ResourceURI:   "/MAAS/api/2.0/vlans/5004/",
		},
		Type:            "vlan",
		Enabled:         true,
		Params:          "",
		MACAddress:      "bc:d3:d5:28:88:dc",
		EffectiveMTU:    1500,
		SystemID:        "thr3am",
		FirmwareVersion: "",
		Tags: []string{
			"tag-EFzacM",
			"tag-dxAebl",
			"tag-GsPX3m",
		},
		Discovered: []NetworkInterfaceDiscoveredIP{},
		ID:         41,
		Links: []NetworkInterfaceLink{
			{
				ID:        18,
				Mode:      "static",
				IPAddress: "2001:db8:42:0:6556:13fa:7452:70da",
				Subnet: Subnet{
					Name: "name-m3vYqT",
					VLAN: VLAN{
						VID:           42,
						MTU:           1500,
						DHCPOn:        false,
						ExternalDHCP:  "",
						Name:          "42",
						Space:         "ipv6-testbed",
						SecondaryRack: "",
						PrimaryRack:   "",
						Fabric:        "fabric-1",
						FabricID:      1,
						ID:            5004,
						ResourceURI:   "/MAAS/api/2.0/vlans/5004/",
					},
					CIDR:      "2001:db8:42::/64",
					RDNSMode:  2,
					GatewayIP: net.IP{},
					DNSServers: []net.IP{
						net.ParseIP("fd15:6cb0:a55c:235f:e78f:ba4f:2eb4:6b3"),
						net.ParseIP("fcc5:8b5e:c55b:90e0:8be:6b87:eb5:f4c7"),
					},
					AllowDNS:        true,
					AllowProxy:      true,
					ActiveDiscovery: false,
					Managed:         true,
					Space:           "ipv6-testbed",
					ID:              5,
					ResourceURI:     "/MAAS/api/2.0/subnets/5/",
				},
			},
		},
		Vendor:      "",
		Children:    []string{},
		ResourceURI: "/MAAS/api/2.0/nodes/thr3am/interfaces/41/",
	},
	{
		Name: "eth-W8E8f0.42",
		Parents: []string{
			"eth-W8E8f0",
		},
		Product: "",
		VLAN: VLAN{
			VID:           42,
			MTU:           1500,
			DHCPOn:        false,
			ExternalDHCP:  "",
			Name:          "42",
			Space:         "ipv6-testbed",
			SecondaryRack: "",
			PrimaryRack:   "",
			Fabric:        "fabric-1",
			FabricID:      1,
			ID:            5004,
			ResourceURI:   "/MAAS/api/2.0/vlans/5004/",
		},
		Type:            "vlan",
		Enabled:         true,
		Params:          "",
		MACAddress:      "ad:5a:3e:a3:68:13",
		EffectiveMTU:    1500,
		SystemID:        "thr3am",
		FirmwareVersion: "",
		Tags: []string{
			"tag-cyexYi",
			"tag-nnoi80",
			"tag-xhApes",
		},
		Discovered: []NetworkInterfaceDiscoveredIP{},
		ID:         42,
		Links: []NetworkInterfaceLink{
			{
				ID:        19,
				Mode:      "static",
				IPAddress: "2001:db8:42:0:cf29:e368:ba5b:9977",
				Subnet: Subnet{
					Name: "name-m3vYqT",
					VLAN: VLAN{
						VID:           42,
						MTU:           1500,
						DHCPOn:        false,
						ExternalDHCP:  "",
						Name:          "42",
						Space:         "ipv6-testbed",
						SecondaryRack: "",
						PrimaryRack:   "",
						Fabric:        "fabric-1",
						FabricID:      1,
						ID:            5004,
						ResourceURI:   "/MAAS/api/2.0/vlans/5004/",
					},
					CIDR:      "2001:db8:42::/64",
					RDNSMode:  2,
					GatewayIP: net.IP{},
					DNSServers: []net.IP{
						net.ParseIP("fd15:6cb0:a55c:235f:e78f:ba4f:2eb4:6b3"),
						net.ParseIP("fcc5:8b5e:c55b:90e0:8be:6b87:eb5:f4c7"),
					},
					AllowDNS:        true,
					AllowProxy:      true,
					ActiveDiscovery: false,
					Managed:         true,
					Space:           "ipv6-testbed",
					ID:              5,
					ResourceURI:     "/MAAS/api/2.0/subnets/5/",
				},
			},
		},
		Vendor:      "",
		Children:    []string{},
		ResourceURI: "/MAAS/api/2.0/nodes/thr3am/interfaces/42/",
	},
}

func TestNetworkInterface(t *testing.T) {
	ifc := new(NetworkInterface)
	ifcs := new([]NetworkInterface)

	// Unmarshal sample data into the types
	if err := helper.TestdataFromJSON("maas/interface.json", ifc); err != nil {
		t.Fatal(err)
	}
	if err := helper.TestdataFromJSON("maas/interfaces.json", ifcs); err != nil {
		t.Fatal(err)
	}

	// Verify the values are correct
	if diff := cmp.Diff(&sampleNetworkInterface, ifc); diff != "" {
		t.Fatalf("json.Decode(NetworkInterface) mismatch (-want +got):\n%s", diff)
	}
	if diff := cmp.Diff(&sampleNetworkInterfaces, ifcs); diff != "" {
		t.Fatalf("json.Decode([]NetworkInterface) mismatch (-want +got):\n%s", diff)
	}
}
